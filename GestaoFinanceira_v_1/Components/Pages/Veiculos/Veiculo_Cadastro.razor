@page "/veiculo/cadastro"
@inject HttpClient http
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject IWebHostEnvironment env
@implements IAsyncDisposable
@using GestaoFinanceira_v_1.Utilitarios;
@inject VeiculoController _veiculosController
@inject CMCControllers _CMCController
@inject ClientePFsController _clientePFsController
@inject ClientePJsController _clientePJsController
@rendermode InteractiveServer
@attribute [Authorize]

<h2><b>Cadastro de Veículos</b></h2>
<h4>Cadastre um novo veículo e mantenha seus dados atualizados</h4>
<hr />
<EditForm Model="@veiculo" OnValidSubmit="@Cadastrar" FormName="Cad_veiculo">
    <DataAnnotationsValidator />
    <div class="row">
        <div class="form-group col-md-2">
            <label>Placa: *</label>
            <!--<div class="col-sm-2">-->
            <InputText id="placa" oninput="this.value=this.value.toUpperCase()" class="form-control" placeholder="" @bind-Value="veiculo.Placa_vei" @onblur="Existe" />
               
        </div>

        <div class="form-group col-md-1">
            <br />
            <button type="button" class="btn btn-secondary" >
                <i class="bi bi-search"></i>
            </button>
        </div>

        <div class="form-group col-md-3">
            <label>Ano Modelo/Fabricação: *</label>
            <!--<div class="col-sm-2">-->
            <InputText id="fabicacao" class="form-control" placeholder="" @bind-Value="veiculo.Ano_vei" />
        </div>
        
        <div class="form-group col-md-3">
            <label>Modelo: *</label>
            <!--<div class="col-sm-2">-->
            <InputText id="modelo" class="form-control" placeholder="Ex. Celta LT 1.0" @bind-Value="veiculo.Modelo_vei" />
        </div>

        <div class="form-group col-md-3">
            <label>Marca: </label>
            <InputSelect id="marca" @bind-Value="marcaFDP.Id_marca" class="form-select">
                <option value="0">--Selecionar--</option>
                @if (marcasVeiculosList == null)
                {
                    <option value="0"> nenhuma cidade </option>
                }
                else
                {
                    @foreach (MarcaVeiculos marca in marcasVeiculosList)
                    {
                        <option value="@marca.Id_marca"> @marca.NomeMarca </option>
                    }
                }
            </InputSelect>
        </div>
    </div>

    <br />

    <div class="row">
        <div class="form-group col-md-2">
            <label>Cor: </label>
            <InputSelect id="cores" @bind-Value="corFDP.Id_cor" class="form-select">
                <option value="">--Selecionar--</option>
                @if (coresList == null)
                {
                    <option value="0"> nenhuma cor </option>
                }
                else
                {
                    @foreach (Cores cor in coresList)
                    {
                        <option value="@cor.Id_cor"> @cor.NomeCor </option>
                    }
                }
            </InputSelect>
        </div>

        <div class="form-group col-md-4">
            <label>Categoria: </label>
            <InputSelect id="categoria" @bind-Value="categoriaFDP.Id_categoria" class="form-select">
                <option value="0">--Selecionar--</option>
                @if (categoriasList == null)
                {
                    <option value="0"> nenhuma cor </option>
                }
                else
                {
                    @foreach (CategoriaVeiculos categoria in categoriasList)
                    {
                        <option value="@categoria.Id_categoria"> @categoria.NomeCategoria </option>
                    }
                }
            </InputSelect>
        </div>

        <div class="form-group col-md-4">
            <label>Chassis: </label>
            <InputText id="chassis" class="form-control" placeholder="" @bind-Value="veiculo.Classis_vei" @onblur="ValidarChassis"/>
            <label class="text-danger">@labelCassis</label>
        </div>

        <div class="form-group col-md-2">
            <label>Renavan: </label>
            <InputText id="renavam" class="form-control" placeholder="" @bind-Value="veiculo.Renavan_vei" @onblur="ValidarRenavan" />
            <label class="text-danger">@labelRenavan</label>
        </div>
    </div>
    <br />

    <div class="row">
        <div class="form-group col-md-4">
            <label>Vincular a Cliente: *</label>
            <InputSelect id="vinculo" @bind-Value="veiculo.Vincular_cli" class="form-select">
                <option value="">--Selecionar--</option>
                <option value="sim">Sim</option>
                <option value="nao">Não</option>
            </InputSelect>
        </div>
        @if(veiculo.Vincular_cli == "sim")
        {
            <div class="form-group col-md-4">
                    <label>Tipo de Cliente:</label>
                <InputSelect id="tipo" @bind-Value="tipo" class="form-select" onclick="@SelectTipo">
                        <option value="">--Selecionar--</option>
                        <option value="pf">Pessoa Física</option>
                        <option value="pj">Pessoa Jurídica</option>
                    </InputSelect>
            </div>

            <div class="form-group col-md-4">
                <label>Cliente:</label>
                    <InputSelect id="clienteSelect" @bind-Value="veiculo.Fk_id_cliente" class="form-select">
                        <option value="">--Selecionar--</option>
                    @if (clientesList == null)
                    {
                        
                    }
                    else
                    {
                        @foreach (Cliente cliente in clientesList)
                        {
                            @if (cliente is ClientePF)
                            {
                                ClientePF pf = cliente as ClientePF;
                                <option value="@pf.Id_cliente"> @pf.Nome_cli</option>
                            }
                            else if (cliente is ClientePJ)
                            {
                                ClientePJ pj = cliente as ClientePJ;
                                <option value="@pj.Id_cliente"> @pj.RazaoSocial_PJ</option>
                            }

                        }
                    }
                    </InputSelect>
                </div>
        }
        
    </div>

    <br />
      <div class="form-group">
           <a href="/veiculos">
            <button  type="button" class="btn btn-danger bi bi-searche">
                Voltar &nbsp <i class="bi bi-arrow-left-circle"></i>
            </button>
            </a>
        <div class="float-end">
            <button type="submit" class="btn btn-success create">
                Salvar &nbsp <i class="fa fa-save"></i>
            </button>
        </div>
            <!--<input type="submit" value="Cadastrar"  class="btn btn-success create bi bi-search"/>-->
      </div>
     <br />
     <br />
</EditForm>
@code {
    int id_cor;
    string tipo = "";
    string mensagem = "";
    Veiculo veiculo = new Veiculo();
    private IJSObjectReference? jsModule;

    List<MarcaVeiculos> marcasVeiculosList { get; set; }
    List<Cores> coresList { get; set; }
    List<CategoriaVeiculos> categoriasList { get; set; }
    List<ClientePF> clientesPFList { get; set; }
    List<ClientePJ> clientePJsList { get; set; }
    List<Cliente> clientesList{ get; set; }

    Cores corFDP = new Cores();
    MarcaVeiculos marcaFDP = new MarcaVeiculos();
    CategoriaVeiculos categoriaFDP = new CategoriaVeiculos();

    protected override async Task OnInitializedAsync()
    {
        veiculo = new Veiculo();
        marcasVeiculosList = await _CMCController.ListarMarcasWait();
        coresList = await _CMCController.ListarCoresWait();
        categoriasList = await _CMCController.ListarCategoriaswait();

        clientesPFList = await _clientePFsController.listarTodos();
        clientePJsList = await _clientePJsController.listarTodos();
        clientesList = new List<Cliente>();
        clientesList.AddRange(clientesPFList);
        clientesList.AddRange(clientePJsList);
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                await JSRuntime.InvokeAsync<string>("masksPlaca.mascaraPlaca", null);
                await JSRuntime.InvokeAsync<string>("masksAnofab.mascaraAnofab", null);
            }
            catch (Exception ex)
            {
                mensagem = "Erro ao carregar as máscaras " + ex.Message;
                //await JSRuntime.InvokeAsync<string>("modal.showModal", "myModal");
            }
        }
    }

    private async Task Cadastrar()
    {
        mensagem = "";
        try
        {
            veiculo.Cor_vei = coresList.FirstOrDefault(x => x.Id_cor == corFDP.Id_cor);
            //veiculo.id_Cor_vei = corFDP.Id_cor;

            veiculo.Marca_vei = marcasVeiculosList.FirstOrDefault(x => x.Id_marca == marcaFDP.Id_marca);
            //veiculo.id_Marca_vei = marcaFDP.Id_marca;

            veiculo.Categoria_vei = categoriasList.FirstOrDefault(x => x.Id_categoria == categoriaFDP.Id_categoria);                


            //veiculo.Cliente_vei = clientesList.FirstOrDefault(x => x.Id_cliente == veiculo.Fk_id_cliente);
            await _veiculosController.Salvar(veiculo);
            mensagem = "Veículo cadastrado com sucesso!";
            await JSRuntime.InvokeAsync<string>("modal.showModal", "myModal");
        }
        catch (Exception ex)
        {
            //mensagem = endereco.Logradouro;
            mensagem = "Erro ao salvar o veículo! " + ex.Message;
            JSRuntime.InvokeAsync<string>("modal.showModal", "myModal");
        }
    }

    private void SelectTipo()
    {
        if(tipo == "pf")
        {
            clientesList.Clear();
            clientesList.AddRange(clientesPFList);
        }else if(tipo == "pj")
        {
            clientesList.Clear();
            clientesList.AddRange(clientePJsList);
        }
        else
        {
            clientesList.Clear();
            clientesList.AddRange(clientesPFList);
            clientesList.AddRange(clientePJsList);
        }
    }

    private void Existe()
    {
        try
        {
            Veiculo cPF = _veiculosController.BuscarPlaca(veiculo.Placa_vei);

            if (cPF.Id_veiculo != null)
            {
                NavigationManager.NavigateTo("veiculo/editar/" + cPF.Id_veiculo);
            }
        }
        catch (Exception)
        {
            
        }

    }

    string labelCassis = "";
    private void ValidarChassis()
    {
        ValidarChassis validar = new ValidarChassis();
        bool valido = validar.IsValid(veiculo.Classis_vei);
        if (valido == true)
        {
            labelCassis = "";
        }
        else
        {
            labelCassis = "Chassis inválido";
        }
    }

    string labelRenavan = "";
    private void ValidarRenavan()
    {
        ValidarRenavan validar = new ValidarRenavan();
        bool valido = validar.IsValid(veiculo.Renavan_vei);
        if (valido == true)
        {   
            labelRenavan = "";
        }
        else
        {
            labelRenavan = "Renavan inválido";
        }
    }

    private void fecharModal(string elementoID)
    {
        veiculo = new Veiculo();
        JSRuntime.InvokeAsync<string>("modalFechar.fecharModal", elementoID);
    }

    async ValueTask IAsyncDisposable.DisposeAsync()
    {
        if (jsModule is not null)
        {
            await jsModule.DisposeAsync();
        }
    }
}



<!--Código responsável por exibir o modal de confirmação de cadastro ou de erro.-->

<div class="modal fade show" id="myModal" style="display:none; background-color: rgba(10,10,10,.8);" aria-modal="true" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Cadastro!</h5>
            </div>
            <div class="modal-body">
                <p>@mensagem</p>
            </div>
            <div class="modal-footer">
                <a href="veiculos"><button type="button" class="btn btn-primary">Voltar a lista</button></a>
                <button type="button" class="btn btn-primary" @onclick='eventArgs=>fecharModal("myModal")'>Novo</button>
            </div>
        </div>
    </div>
</div>